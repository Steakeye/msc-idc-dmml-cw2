if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
dt.c4_5_h2
dt.c4_5_h2$finalModel
View(dt.c4_5_h2)
View(dt.c4_5_h2)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2$finalModel)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#registerDoMC()
load("holdout.training.rda")
load("holdout.testing.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2_finalModel)
#dt.c4_5_h2
#dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
#dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#registerDoMC()
load("holdout.training.rda")
load("holdout.testing.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2_finalModel)
#dt.c4_5_h2
#dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
#dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a_finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
dt_sum.c4_5_j48_h_a$details[1]
dt_sum.c4_5_h2_a$details[1]
#holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_a_test <- predict(dt.c4_5_j48_h_a, newdata = holdout_age_groups.testing)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#dt.c4_5_j48_h_a_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.c4_5_j48_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_a_test <- predict(dt.c4_5_h2_a, newdata = holdout_age_groups.testing)
dt.c4_5_h2_a_test_cm <- confusionMatrix(dt.c4_5_h2_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_h2_a_test_cm$table
dt.c4_5_h2_a_test_cm$overall[1]
WOW("J48")
#dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8)
#dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5)
#dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_13_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_13_5)
dt_sum.c4_5_j48_kf_a <- summary(dt.c4_5_j48_kf_a)
dt.c4_5_j48_kf_a_final <- summary(dt.c4_5_j48_kf_a$finalModel)
#
dt_sum.c4_5_j48_kf_a
#
dt.c4_5_j48_kf_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_j48_kf_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_j48_kf_a_finalModel_party)
width(dt.c4_5_j48_kf_a_finalModel_party)
depth(dt.c4_5_j48_kf_a_finalModel_party)
#
plot(dt.c4_5_j48_kf_a_finalModel_party)
dt_sum.c4_5_r5kf8_a <- summary(dt.c4_5_j48_r5kf8_a)
dt.c4_5_j48_r5kf8_a_final <- summary(dt.c4_5_j48_r5kf8_a$finalModel)
#
dt_sum.c4_5_r5kf8_a
#
dt.c4_5_j48_r5kf8_a_finalModel <- dt.c4_5_j48_r5kf8_a$finalModel
dt.c4_5_j48_r5kf8_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf8_a_finalModel)
#
length(dt.c4_5_j48_r5kf8_a_finalModel_party)
width(dt.c4_5_j48_r5kf8_a_finalModel_party)
depth(dt.c4_5_j48_r5kf8_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf8_a_finalModel_party)
dt_sum.c4_5_r5kf13_a <- summary(dt.c4_5_j48_r5kf13_a)
dt.c4_5_j48_r5kf13_a_final <- summary(dt.c4_5_j48_r5kf13_a$finalModel)
#
dt_sum.c4_5_r5kf13_a
#
dt.c4_5_j48_r5kf13_a_finalModel <- dt.c4_5_j48_r5kf13_a$finalModel
dt.c4_5_j48_r5kf13_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf13_a_finalModel)
#
length(dt.c4_5_j48_r5kf13_a_finalModel_party)
width(dt.c4_5_j48_r5kf13_a_finalModel_party)
depth(dt.c4_5_j48_r5kf13_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf13_a_finalModel_party)
dt_sum.c4_5_j48_kf_a$details[1]
dt_sum.c4_5_r5kf8_a$details[1]
dt_sum.c4_5_r5kf13_a$details[1]
dt.c4_5_j48_kf_a_test <- predict(dt.c4_5_j48_kf_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_kf_a_test_cm <- confusionMatrix(dt.c4_5_j48_kf_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_kf_a_test_cm$table
dt.c4_5_j48_kf_a_test_cm$overall[1]
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf8_a_test_cm$table
dt.c4_5_j48_r5kf8_a_test_cm$overall[1]
dt.c4_5_j48_r5kf13_a_test <- predict(dt.c4_5_j48_r5kf13_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf13_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf13_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf13_a_test_cm$table
dt.c4_5_j48_r5kf13_a_test_cm$overall[1]
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", prox= TRUE)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
#
dt.rf_h_a_finalModel$forest[11]
dt.rf_h_a_finalModel$forest[12]
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
dt.rf_h_a_test <- predict(dt.rf_h_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.rf_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "rf", prox= TRUE, trControl = cv.train_control_8_5)
dt.rf_cv_r5kf8_a_finalModel <- dt.rf_cv_r5kf8_a$finalModel
dt_sum.rf_cv_r5kf8_a <- summary(dt.rf_cv_r5kf8_a)
#
dt.rf_cv_r5kf8_a_finalModel$forest[11]
dt.rf_cv_r5kf8_a_finalModel$forest[12]
#
print(dt.rf_cv_r5kf8_a)
print(dt.rf_cv_r5kf8_a_finalModel)
plot(dt.rf_cv_r5kf8_a_finalModel)
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
holdout.testing
holdout.testing$rings
if(!require(ROCR)) install.packages("ROCR", repos = mirrorUrl)
#
library("ROCR")
data(ROCR.simple)
View(ROCR.simple)
ROCR.simple$predictions
ROCR.simple$labels
dt.rf_cv_r5kf8_a_test
holdout_age_groups.testing
holdout_age_groups.testing$age_group
head(holdout_age_groups.testing$age_group)
head(dt.rf_cv_r5kf8_a_test)
#diag <- diag(cm) # number of correctly classified instances per class
#rowsums <- apply(cm, 1, sum) # number of instances per class
#colsums <- apply(cm, 2, sum) # number of predictions per class
#pred_dt.c4_5 <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
#precision <- diag / colsums
#recall <- diag / rowsums
#f1 = 2 * precision * recall / (precision + recall)
#data.frame(precision, recall, f1)
pred_dt.c4_5 <- prediction(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test
holdout_age_groups.testing$age_group
#diag <- diag(cm) # number of correctly classified instances per class
#rowsums <- apply(cm, 1, sum) # number of instances per class
#colsums <- apply(cm, 2, sum) # number of predictions per class
#pred_dt.c4_5 <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
#precision <- diag / colsums
#recall <- diag / rowsums
#f1 = 2 * precision * recall / (precision + recall)
#data.frame(precision, recall, f1)
#pred_dt.c4_5 <- prediction(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
pred_dt.c4_5 <- predict(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group, type = "prob")
data(ROCR.simple)
outlook = c('rain', 'overcast', 'rain', 'sunny', 'rain',
'rain', 'sunny', 'overcast', 'overcast', 'overcast',
'sunny', 'sunny', 'rain', 'rain', 'overcast',
'sunny', 'overcast', 'overcast', 'sunny', 'sunny',
'sunny', 'overcast')
humidity = c(79, 74, 80, 60, 65, 79, 60, 74, 77, 80,
71, 70, 80, 65, 70, 56, 80, 70, 56, 70,
71, 77)
windy = c(T, T, F, T, F, T, T, T, T, F, T, F, F, F, T, T, F, T, T, F, T, T)
play = c(F, F, T, F, T, F, F, T, T, T, F, F, T, T, T, T, T, T, F, T, F, T)
game = data.frame(outlook, humidity, windy, play)
game$score = NA
attach(game)
game$score[outlook == 'sunny' & humidity <= 70] = 5/8
game$score[outlook == 'sunny' & humidity > 70] = 1 - 3/4
game$score[outlook == 'overcast'] = 4/5
game$score[outlook == 'rain' & windy == T] = 1 - 2/2
game$score[outlook == 'rain' & windy == F] = 3/3
detach(game)
game$predict = game$score >= 0.5
game$correct = game$predict == game$play
library(ROCR)
pred = prediction(game$score, game$play)
roc = performance(pred, measure="tpr", x.measure="fpr")
plot(roc, col="orange", lwd=2)
lines(x=c(0, 1), y=c(0, 1), col="red", lwd=2)
auc = performance(pred, 'auc')
slot(auc, 'y.values')
gam
game
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, t)
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(ROCR)) install.packages("ROCR", repos = mirrorUrl)
#
library("caret")
library("ROCR")
#diag <- diag(cm) # number of correctly classified instances per class
#rowsums <- apply(cm, 1, sum) # number of instances per class
#colsums <- apply(cm, 2, sum) # number of predictions per class
#pred_dt.c4_5 <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
#precision <- diag / colsums
#recall <- diag / rowsums
#f1 = 2 * precision * recall / (precision + recall)
#data.frame(precision, recall, f1)
#pred_dt.c4_5 <- prediction(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
pred_dt.c4_5 <- predict(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group, type = "prob")
#diag <- diag(cm) # number of correctly classified instances per class
#rowsums <- apply(cm, 1, sum) # number of instances per class
#colsums <- apply(cm, 2, sum) # number of predictions per class
#pred_dt.c4_5 <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
#precision <- diag / colsums
#recall <- diag / rowsums
#f1 = 2 * precision * recall / (precision + recall)
#data.frame(precision, recall, f1)
#pred_dt.c4_5 <- prediction(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
pred_dt.c4_5 <- predict(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
#diag <- diag(cm) # number of correctly classified instances per class
#rowsums <- apply(cm, 1, sum) # number of instances per class
#colsums <- apply(cm, 2, sum) # number of predictions per class
#pred_dt.c4_5 <- prediction( ROCR.simple$predictions, ROCR.simple$labels)
#precision <- diag / colsums
#recall <- diag / rowsums
#f1 = 2 * precision * recall / (precision + recall)
#data.frame(precision, recall, f1)
#pred_dt.c4_5 <- prediction(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
#pred_dt.c4_5 <- predict(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
pred_dt.c4_5 <- predict(as.numeric(dt.rf_cv_r5kf8_a_test), as.numeric(holdout_age_groups.testing$age_group))
head(as.numeric(dt.rf_cv_r5kf8_a_test))
head(as.numeric(holdout_age_groups.testing$age_group))
head(dt.rf_cv_r5kf8_a_test)
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = "class")
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = "prob")
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = "raw")
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw", "class"))
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw"))
dt.rf_cv_r5kf8_a_test_prob <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw", "prob"))
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
#dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw"))
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_prob <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw", "prob"))
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_h_a_test <- predict(dt.rf_h_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.rf_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_prob
#dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = c("raw"))
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_prob <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing, type = "prob")
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a_test_prob
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt_sum.c4_5_r5kf8_a <- summary(dt.c4_5_j48_r5kf8_a)
#dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5)
pred_dt.rf <- predict(as.numeric(dt.rf_cv_r5kf8_a_test_prob), as.numeric(holdout_age_groups.testing$age_group))
View(dt.rf_cv_r5kf8_a_test_prob)
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test_prob <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing, type = "prob")
dt.c4_5_j48_r5kf8_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf8_a_test_cm$table
dt.c4_5_j48_r5kf8_a_test_cm$overall[1]
View(dt.c4_5_j48_r5kf8_a_test_prob)
