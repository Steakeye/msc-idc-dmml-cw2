knn.h_a_test_cm$overall[1]
knn.r5kf8_a_test_cm$overall[1]
knn.loo_a_test_cm$overall[1]
if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
knitr::opts_chunk$set(echo = TRUE)
set.seed(4321)
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
#
library(caret)
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
holdout.testing <- abalone_data_cleansed[-holdout.train_indeces,]
dim(holdout.training)
dim(holdout.testing)
head(abalone_data_cleansed_age_groups)
holdout_age_groups.train_indeces <- createDataPartition(y = abalone_data_cleansed_age_groups$weight.shell, p= 2/3, list = FALSE)
head(holdout_age_groups.train_indeces, n=20)
holdout_age_groups.training <- abalone_data_cleansed_age_groups[holdout.train_indeces,]
holdout_age_groups.testing <- abalone_data_cleansed_age_groups[-holdout.train_indeces,]
cv.train_control_8 <- trainControl(method="cv", number=8)
cv.train_control_8_5 <- trainControl(method="repeatedcv", number=8, repeats = 5)
cv.train_control_13_5 <- trainControl(method="repeatedcv", number=13, repeats = 5)
# define training control
loocv.train_control <- trainControl(method="LOOCV")
J48
holdout.training
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
#
library(caret)
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
holdout.testing <- abalone_data_cleansed[-holdout.train_indeces,]
if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
save(holdout.training, "data/holdout.training.rda")
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
save(holdout.training, file="data/holdout.training.rda")
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
save(holdout.training, file="holdout.training.rda")
holdout.testing <- abalone_data_cleansed[-holdout.train_indeces,]
holdout.training <- load("holdout.training.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
load("holdout.training.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
rm(holdout.training)
load("holdout.training.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
save(holdout.training, file="holdout.training.rda")
holdout.testing <- abalone_data_cleansed[-holdout.train_indeces,]
save(holdout.testing, file="holdout.testing.rda")
set.seed(4321)
head(abalone_data_cleansed)
holdout.train_indeces <- createDataPartition(y = abalone_data_cleansed$weight.shell, p= 2/3, list = FALSE)
head(holdout.train_indeces, n=20)
holdout.training <- abalone_data_cleansed[holdout.train_indeces,]
save(holdout.training, file="holdout.training.rda")
holdout.testing <- abalone_data_cleansed[-holdout.train_indeces,]
save(holdout.testing, file="holdout.testing.rda")
load("holdout.training.rda")
load("holdout.testing.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
dt.c4_5_h2
dt.c4_5_h2$finalModel
View(dt.c4_5_h2)
View(dt.c4_5_h2)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2$finalModel)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#registerDoMC()
load("holdout.training.rda")
load("holdout.testing.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2_finalModel)
#dt.c4_5_h2
#dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
#dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
#if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
#library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
#registerDoMC()
load("holdout.training.rda")
load("holdout.testing.rda")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2_finalModel)
#dt.c4_5_h2
#dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2_finalModel)
#dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a_finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
dt_sum.c4_5_j48_h_a$details[1]
dt_sum.c4_5_h2_a$details[1]
#holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_a_test <- predict(dt.c4_5_j48_h_a, newdata = holdout_age_groups.testing)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#dt.c4_5_j48_h_a_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.c4_5_j48_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_a_test <- predict(dt.c4_5_h2_a, newdata = holdout_age_groups.testing)
dt.c4_5_h2_a_test_cm <- confusionMatrix(dt.c4_5_h2_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_h2_a_test_cm$table
dt.c4_5_h2_a_test_cm$overall[1]
WOW("J48")
#dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8)
#dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5)
#dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_13_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_13_5)
dt_sum.c4_5_j48_kf_a <- summary(dt.c4_5_j48_kf_a)
dt.c4_5_j48_kf_a_final <- summary(dt.c4_5_j48_kf_a$finalModel)
#
dt_sum.c4_5_j48_kf_a
#
dt.c4_5_j48_kf_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_j48_kf_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_j48_kf_a_finalModel_party)
width(dt.c4_5_j48_kf_a_finalModel_party)
depth(dt.c4_5_j48_kf_a_finalModel_party)
#
plot(dt.c4_5_j48_kf_a_finalModel_party)
dt_sum.c4_5_r5kf8_a <- summary(dt.c4_5_j48_r5kf8_a)
dt.c4_5_j48_r5kf8_a_final <- summary(dt.c4_5_j48_r5kf8_a$finalModel)
#
dt_sum.c4_5_r5kf8_a
#
dt.c4_5_j48_r5kf8_a_finalModel <- dt.c4_5_j48_r5kf8_a$finalModel
dt.c4_5_j48_r5kf8_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf8_a_finalModel)
#
length(dt.c4_5_j48_r5kf8_a_finalModel_party)
width(dt.c4_5_j48_r5kf8_a_finalModel_party)
depth(dt.c4_5_j48_r5kf8_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf8_a_finalModel_party)
dt_sum.c4_5_r5kf13_a <- summary(dt.c4_5_j48_r5kf13_a)
dt.c4_5_j48_r5kf13_a_final <- summary(dt.c4_5_j48_r5kf13_a$finalModel)
#
dt_sum.c4_5_r5kf13_a
#
dt.c4_5_j48_r5kf13_a_finalModel <- dt.c4_5_j48_r5kf13_a$finalModel
dt.c4_5_j48_r5kf13_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf13_a_finalModel)
#
length(dt.c4_5_j48_r5kf13_a_finalModel_party)
width(dt.c4_5_j48_r5kf13_a_finalModel_party)
depth(dt.c4_5_j48_r5kf13_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf13_a_finalModel_party)
dt_sum.c4_5_j48_kf_a$details[1]
dt_sum.c4_5_r5kf8_a$details[1]
dt_sum.c4_5_r5kf13_a$details[1]
dt.c4_5_j48_kf_a_test <- predict(dt.c4_5_j48_kf_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_kf_a_test_cm <- confusionMatrix(dt.c4_5_j48_kf_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_kf_a_test_cm$table
dt.c4_5_j48_kf_a_test_cm$overall[1]
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf8_a_test_cm$table
dt.c4_5_j48_r5kf8_a_test_cm$overall[1]
dt.c4_5_j48_r5kf13_a_test <- predict(dt.c4_5_j48_r5kf13_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf13_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf13_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf13_a_test_cm$table
dt.c4_5_j48_r5kf13_a_test_cm$overall[1]
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", prox= TRUE)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
#
dt.rf_h_a_finalModel$forest[11]
dt.rf_h_a_finalModel$forest[12]
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
dt.rf_h_a_test <- predict(dt.rf_h_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.rf_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
dt.rf_cv_r5kf8_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "rf", prox= TRUE, trControl = cv.train_control_8_5)
dt.rf_cv_r5kf8_a_finalModel <- dt.rf_cv_r5kf8_a$finalModel
dt_sum.rf_cv_r5kf8_a <- summary(dt.rf_cv_r5kf8_a)
#
dt.rf_cv_r5kf8_a_finalModel$forest[11]
dt.rf_cv_r5kf8_a_finalModel$forest[12]
#
print(dt.rf_cv_r5kf8_a)
print(dt.rf_cv_r5kf8_a_finalModel)
plot(dt.rf_cv_r5kf8_a_finalModel)
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
holdout.testing
holdout.testing$rings
