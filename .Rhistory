library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
View(dt_sum.c4_5_j48_h)
View(dt.c4_5_j48_h)
dt.c4_5_j48_h
dt.c4_5_h2
dt.c4_5_h2$method
dt.c4_5_h2$modelType
dt.c4_5_h2$modelInfo
dt.c4_5_h2$results
dt.c4_5_h2$levels
dt.c4_5_h2$times
dt.c4_5_h2$pred
dt.c4_5_h2$bestTune
dt.c4_5_h2$results
head(dt.c4_5_h2)
head(dt.c4_5_h2)
dt.c4_5_h2
View(abalone_data_cleansed)
dt.c4_5_h2$results
dt.c4_5_h2
dt.c4_5_h2$bestTune
sumary(dt.c4_5_h2)
summary(dt.c4_5_h2)
View(dt.c4_5_h2)
dt.c4_5_h2
dt.c4_5_h2
rm(dt.c4_5_h)
dt_sum.c4_5_j48_h
dt_sum.c4_5_j48_h$details
dt_sum.c4_5_j48_h$details$pctCorrect
summary(dt_sum.c4_5_j48_h$details)
summary(dt_sum.c4_5_j48_h)
text(dt_sum.c4_5_j48_h)
View(dt.c4_5_j48_h)
dt.c4_5_j48_h
dt.c4_5_h2
dt.c4_5_h2$finalModel
View(dt.c4_5_j48_h)
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
View(dt.c4_5_j48_h_party)
dt.c4_5_j48_h_party
length(dt.c4_5_j48_h_party)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
#set.seed(1958)  # set a seed to get replicable results
#train <- createFolds(iris$Species, k=10)
#C45Fit <- train(Species ~., method="J48", data=iris,
#                tuneLength = 5,
#                trControl = trainControl(
#                  method="cv", indexOut=train))
test.c4_5 <- J48(Species ~., iris)
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
dt.c4_5_j48_h
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2$finalModel)
dt.c4_5_h2
dt.c4_5_h2$finalModel
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
#dt_sum.c4_5_h2_final
#holdout.test_rings <- holdout.testing$rings
#dt.c4_5_h_test <- predict(dt.c4_5_h, newdata = holdout.testing)
#table(dt.c4_5_h_test, holdout.test_rings)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
#dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
#table(dt.c4_5_h2_test, holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
#dt.c4_5_h2_fm <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_fm_test <- predict(dt.c4_5_h2_fm, newdata = holdout.testing)
#table(dt.c4_5_h2_fm_test, holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h2_fm_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2$finalModel
View(dt_sum.c4_5_h2_final)
View(dt_sum.c4_5_j48_h)
dt.c4_5_h2
dt.c4_5_h2$finalModel
dt.c4_5_h2_party <- as.party(dt.c4_5_h2)
View(dataframe.rsquareds)
View(dt.c4_5_h2)
View(dt_sum.c4_5_h2_final)
View(dt_sum.c4_5_j48_h)
View(dt.c4_5_h2_fm)
View(dt.c4_5_h2_fm)
View(dt.c4_5_h2_fm)
View(dt.c4_5_h2)
dt.c4_5_h2
dt.c4_5_h2$finalModel
dt.c4_5_h2_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2
dt.c4_5_h2$finalModel
dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt.c4_5_h2_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
View(dt.c4_5_h2_finalModel)
dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt.c4_5_h2_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_party)
width(dt.c4_5_h2_party)
depth(dt.c4_5_h2_party)
dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
dt.c4_5_h2_finalModel
dt.c4_5_h2_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_party)
width(dt.c4_5_h2_party)
depth(dt.c4_5_h2_party)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
plot(dt.c4_5_h2_finalModel)
#dt.c4_5_h2_finalModel_party
plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
#dt_sum.c4_5_h2_final
View(dt_sum.c4_5_j48_h)
dt_sum.c4_5_j48_h$details
dt_sum.c4_5_j48_h$details$pctCorrect
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
holdout.training
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
#holdout.test_rings <- holdout.testing$rings
#dt.c4_5_h_test <- predict(dt.c4_5_h, newdata = holdout.testing)
#table(dt.c4_5_h_test, holdout.test_rings)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
holdout.test_rings <- holdout.testing$rings
#dt.c4_5_h_test <- predict(dt.c4_5_h, newdata = holdout.testing)
#table(dt.c4_5_h_test, holdout.test_rings)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
#table(dt.c4_5_h_test, holdout.test_rings)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
table(dt.c4_5_j48_h_test, holdout.test_rings)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
#table(dt.c4_5_j48_h_test, holdout.test_rings)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2)
dt.c4_5_h2
#dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test <- predict(dt.c4_5_h2_party, newdata = holdout.testing)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
#set.seed(1958)  # set a seed to get replicable results
#train <- createFolds(iris$Species, k=10)
#C45Fit <- train(Species ~., method="J48", data=iris,
#                tuneLength = 5,
#                trControl = trainControl(
#                  method="cv", indexOut=train))
test.c4_5 <- J48(Species ~., iris)
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2$finalModel)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2
#dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
#dt.c4_5_h2_fm <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_fm_test <- predict(dt.c4_5_h2_fm, newdata = holdout.testing)
#table(dt.c4_5_h2_fm_test, holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h2_fm_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2
#dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm
View(dt.c4_5_h2_test_cm)
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
View(dt.c4_5_h2_test_cm)
View(dt.c4_5_h2_test_cm)
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall$Accuracy
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[0]
View(dt.c4_5_h2_test_cm)
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.c4_5_h2_fm <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_fm_test <- predict(dt.c4_5_h2_fm, newdata = holdout.testing)
#table(dt.c4_5_h2_fm_test, holdout.test_rings)
#confusionMatrix(factor(dt.c4_5_h2_fm_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_fm <- dt.c4_5_h2$finalModel
dt.c4_5_h2_fm_test <- predict(dt.c4_5_h2_fm, newdata = holdout.testing)
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
head(abalone_data_cleansed_age_groups)
holdout_age_groups.train_indeces <- createDataPartition(y = abalone_data_cleansed_age_groups$weight.shell, p= 2/3, list = FALSE)
head(holdout_age_groups.train_indeces, n=20)
holdout_age_groups.training <- abalone_data_cleansed[holdout.train_indeces,]
holdout_age_groups.testing <- abalone_data_cleansed[-holdout.train_indeces,]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
View(holdout_age_groups.training)
head(abalone_data_cleansed_age_groups)
holdout_age_groups.train_indeces <- createDataPartition(y = abalone_data_cleansed_age_groups$weight.shell, p= 2/3, list = FALSE)
head(holdout_age_groups.train_indeces, n=20)
holdout_age_groups.training <- abalone_data_cleansed_age_groups[holdout.train_indeces,]
holdout_age_groups.testing <- abalone_data_cleansed_age_groups[-holdout.train_indeces,]
View(holdout_age_groups.training)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
dt_sum.c4_5_j48_h_a
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2$finalModel)
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt_sum.c4_5_j48_h_a
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
holdout_age_groups.training
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2$finalModel)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
dt_sum.c4_5_j48_h_a$details[1]
dt_sum.c4_5_h2_a$details[1]
#holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_a_test <- predict(dt.c4_5_j48_h_a, newdata = holdout_age_groups.testing)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#dt.c4_5_j48_h_a_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.c4_5_j48_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_a_test <- predict(dt.c4_5_h2_a, newdata = holdout_age_groups.testing)
dt.c4_5_h2_a_test_cm <- confusionMatrix(dt.c4_5_h2_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_h2_a_test_cm$table
dt.c4_5_h2_a_test_cm$overall[1]
