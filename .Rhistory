dt_sum.c4_5_r5kf13_a <- summary(dt.c4_5_j48_r5kf13_a)
dt.c4_5_j48_r5kf13_a_final <- summary(dt.c4_5_j48_r5kf13_a$finalModel)
#
dt_sum.c4_5_r5kf13_a
#
dt.c4_5_j48_r5kf13_a_finalModel <- dt.c4_5_j48_r5kf13_a$finalModel
dt.c4_5_j48_r5kf13_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf13_a_finalModel)
#
length(dt.c4_5_j48_r5kf13_a_finalModel_party)
width(dt.c4_5_j48_r5kf13_a_finalModel_party)
depth(dt.c4_5_j48_r5kf13_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf13_a_finalModel_party)
dt.c4_5_j48_r5kf8_a
dt.c4_5_j48_r5kf13_a
View(holdout_age_groups.training)
dt_sum.c4_5_j48_h_a$details[1]
dt_sum.c4_5_h2_a$details[1]
#dt.c4_5_h2
dt.c4_5_h2_a_test <- predict(dt.c4_5_h2_a, newdata = holdout_age_groups.testing)
dt.c4_5_h2_a_test_cm <- confusionMatrix(dt.c4_5_h2_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_h2_a_test_cm$table
dt.c4_5_h2_a_test_cm$overall[1]
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a_finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
summary(abalone_data_cleansed$rings)
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 19, Inf), labels=c("young","middle","old"))
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
summary(abalone_data_cleansed$rings)
quantile(abalone_data_cleansed$rings, c(1/3, 2/3))
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 19, Inf), labels=c("young","middle","old"))
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
summary(abalone_data_cleansed$rings)
quantile(abalone_data_cleansed$rings, c(1/3, 2/3))
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 12, Inf), labels=c("young","middle","old"))
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
knitr::opts_chunk$set(echo = TRUE, cache = TRUE)
set.seed(4321)
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
dt.c4_5_j48_h <- J48(as.factor(rings)~., holdout.training)
dt_sum.c4_5_j48_h <- summary(dt.c4_5_j48_h)
dt.c4_5_j48_h_party <- as.party(dt.c4_5_j48_h)
length(dt.c4_5_j48_h_party)
width(dt.c4_5_j48_h_party)
depth(dt.c4_5_j48_h_party)
dt.c4_5_h2 <- train(as.factor(rings) ~., method="J48", holdout.training, tuneLength = 8)
dt_sum.c4_5_h2 <- summary(dt.c4_5_h2)
dt_sum.c4_5_h2_final <- summary(dt.c4_5_h2$finalModel)
#dt.c4_5_h2
dt.c4_5_h2_finalModel <- dt.c4_5_h2$finalModel
#dt.c4_5_h2_finalModel
dt.c4_5_h2_finalModel_party <- as.party(dt.c4_5_h2$finalModel)
length(dt.c4_5_h2_finalModel_party)
width(dt.c4_5_h2_finalModel_party)
depth(dt.c4_5_h2_finalModel_party)
#plot(dt.c4_5_h2_finalModel)
plot(dt.c4_5_h2_finalModel_party)
dt_sum.c4_5_j48_h
dt_sum.c4_5_h2
dt_sum.c4_5_j48_h$details[1]
dt_sum.c4_5_h2$details[1]
holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_test <- predict(dt.c4_5_j48_h, newdata = holdout.testing)
holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
dt.c4_5_j48_h_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_test_cm$table
dt.c4_5_j48_h_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_test <- predict(dt.c4_5_h2, newdata = holdout.testing)
dt.c4_5_h2_test_cm <- confusionMatrix(factor(dt.c4_5_h2_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_h2_test_cm$table
dt.c4_5_h2_test_cm$overall[1]
dt.formula <- as.formula(age_group ~ weight.shell + height + diameter)
dt.c4_5_j48_h_a <- J48(dt.formula, holdout_age_groups.training)
dt_sum.c4_5_j48_h_a <- summary(dt.c4_5_j48_h_a)
dt.c4_5_j48_h_a_party <- as.party(dt.c4_5_j48_h_a)
#
dt_sum.c4_5_j48_h_a
#
length(dt.c4_5_j48_h_a_party)
width(dt.c4_5_j48_h_a_party)
depth(dt.c4_5_j48_h_a_party)
#
plot(dt.c4_5_j48_h_a_party)
dt.c4_5_h2_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a_finalModel)
#
length(dt.c4_5_h2_a_finalModel_party)
width(dt.c4_5_h2_a_finalModel_party)
depth(dt.c4_5_h2_a_finalModel_party)
#
plot(dt.c4_5_h2_a_finalModel_party)
dt_sum.c4_5_j48_h_a$details[1]
dt_sum.c4_5_h2_a$details[1]
#holdout.test_rings <- holdout.testing$rings
dt.c4_5_j48_h_a_test <- predict(dt.c4_5_j48_h_a, newdata = holdout_age_groups.testing)
#holdout.test_levels <- min(holdout.test_rings):max(holdout.test_rings)
#dt.c4_5_j48_h_a_test_cm <- confusionMatrix(factor(dt.c4_5_j48_h_test, levels=holdout.test_levels), factor(holdout.test_rings, levels = holdout.test_levels))
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.c4_5_j48_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
#dt.c4_5_h2
dt.c4_5_h2_a_test <- predict(dt.c4_5_h2_a, newdata = holdout_age_groups.testing)
dt.c4_5_h2_a_test_cm <- confusionMatrix(dt.c4_5_h2_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_h2_a_test_cm$table
dt.c4_5_h2_a_test_cm$overall[1]
WOW("J48")
#dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8)
#dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_13_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_13_5)
View(abalone_data_cleansed_age_groups)
summary(abalone_data_cleansed$rings)
quantile(abalone_data_cleansed$rings, c(1/3, 2/3))
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 12, Inf), labels=c("young","middle","old"))
summary(abalone_age_groups)
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
summary(abalone_data_cleansed$rings)
quantile(abalone_data_cleansed$rings, c(1/3, 2/3))
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 11, Inf), labels=c("young","middle","old"))
summary(abalone_age_groups)
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
summary(abalone_data_cleansed$rings)
quantile(abalone_data_cleansed$rings, c(1/3, 2/3))
abalone_age_groups <- cut(abalone_data_cleansed$rings, breaks=c(-Inf, 9, 12, Inf), labels=c("young","middle","old"))
summary(abalone_age_groups)
abalone_data_cleansed_age_groups <- subset(abalone_data_cleansed, select=-rings)
abalone_data_cleansed_age_groups$age_group <- abalone_age_groups
rm(abalone_age_groups)
#dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_kf_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8)
#dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_8_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf8_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5)
#dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8, trControl = cv.train_control_13_5)
#abalone_data_cleansed_age_groups
dt.c4_5_j48_r5kf13_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_13_5)
dt_sum.c4_5_j48_kf_a <- summary(dt.c4_5_j48_kf_a)
dt.c4_5_j48_kf_a_final <- summary(dt.c4_5_j48_kf_a$finalModel)
#
dt_sum.c4_5_h2_a
#
dt.c4_5_j48_kf_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_j48_kf_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_j48_kf_a_finalModel_party)
width(dt.c4_5_j48_kf_a_finalModel_party)
depth(dt.c4_5_j48_kf_a_finalModel_party)
#
plot(dt.c4_5_j48_kf_a_finalModel_party)
dt_sum.c4_5_r5kf8_a <- summary(dt.c4_5_j48_r5kf8_a)
dt.c4_5_j48_r5kf8_a_final <- summary(dt.c4_5_j48_r5kf8_a$finalModel)
#
dt_sum.c4_5_r5kf8_a
#
dt.c4_5_j48_r5kf8_a_finalModel <- dt.c4_5_j48_r5kf8_a$finalModel
dt.c4_5_j48_r5kf8_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf8_a_finalModel)
#
length(dt.c4_5_j48_r5kf8_a_finalModel_party)
width(dt.c4_5_j48_r5kf8_a_finalModel_party)
depth(dt.c4_5_j48_r5kf8_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf8_a_finalModel_party)
dt_sum.c4_5_r5kf13_a <- summary(dt.c4_5_j48_r5kf13_a)
dt.c4_5_j48_r5kf13_a_final <- summary(dt.c4_5_j48_r5kf13_a$finalModel)
#
dt_sum.c4_5_r5kf13_a
#
dt.c4_5_j48_r5kf13_a_finalModel <- dt.c4_5_j48_r5kf13_a$finalModel
dt.c4_5_j48_r5kf13_a_finalModel_party <- as.party(dt.c4_5_j48_r5kf13_a_finalModel)
#
length(dt.c4_5_j48_r5kf13_a_finalModel_party)
width(dt.c4_5_j48_r5kf13_a_finalModel_party)
depth(dt.c4_5_j48_r5kf13_a_finalModel_party)
#
plot(dt.c4_5_j48_r5kf13_a_finalModel_party)
dt_sum.c4_5_j48_kf_a <- summary(dt.c4_5_j48_kf_a)
dt.c4_5_j48_kf_a_final <- summary(dt.c4_5_j48_kf_a$finalModel)
#
dt_sum.c4_5_j48_kf_a
#
dt.c4_5_j48_kf_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_j48_kf_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_j48_kf_a_finalModel_party)
width(dt.c4_5_j48_kf_a_finalModel_party)
depth(dt.c4_5_j48_kf_a_finalModel_party)
#
plot(dt.c4_5_j48_kf_a_finalModel_party)
dt_sum.c4_5_j48_kf_a <- summary(dt.c4_5_j48_kf_a)
dt.c4_5_j48_kf_a_final <- summary(dt.c4_5_j48_kf_a$finalModel)
#
dt_sum.c4_5_j48_kf_a
dt.c4_5_j48_kf_a_final
#
dt.c4_5_j48_kf_a_finalModel <- dt.c4_5_h2_a$finalModel
dt.c4_5_j48_kf_a_finalModel_party <- as.party(dt.c4_5_h2_a$finalModel)
#
length(dt.c4_5_j48_kf_a_finalModel_party)
width(dt.c4_5_j48_kf_a_finalModel_party)
depth(dt.c4_5_j48_kf_a_finalModel_party)
#
plot(dt.c4_5_j48_kf_a_finalModel_party)
dt_sum.c4_5_j48_kf_a$details[1]
#dt_sum.c4_5_h2$details[1]
dt_sum.c4_5_j48_kf_a$details[1]
dt_sum.c4_5_r5kf8_a$details[1]
dt_sum.c4_5_r5kf13_a$details[1]
dt.c4_5_j48_a_test <- predict(dt.c4_5_j48_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_kf_a_test <- predict(dt.c4_5_j48_kf_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_kf_a_test_cm <- confusionMatrix(dt.c4_5_j48_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_kf_a_test <- predict(dt.c4_5_j48_kf_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_kf_a_test_cm <- confusionMatrix(dt.c4_5_j48_kf_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_kf_a_test_cm$table
dt.c4_5_j48_kf_a_test_cm$overall[1]
dt.c4_5_r5kf8_a_test <- predict(dt.c4_5_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test_cm <- confusionMatrix(dt.c4_5_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf8_a_test <- predict(dt.c4_5_j48_r5kf8_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf8_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf8_a_test_cm$table
dt.c4_5_j48_r5kf8_a_test_cm$overall[1]
dt.c4_5_j48_r5kf13_a_test <- predict(dt.c4_5_j48_r5kf13_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_r5kf13_a_test_cm <- confusionMatrix(dt.c4_5_j48_r5kf13_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_r5kf13_a_test_cm$table
dt.c4_5_j48_r5kf13_a_test_cm$overall[1]
#dt.c4_5_loo_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt.c4_5_loo_a <- train(dt.formula, method="LOOCV", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = loocv.train_control)
#dt.c4_5_loo_a <- train(dt.formula, method="J48", holdout_age_groups.training, tuneLength = 8)
dt.c4_5_loo_a <- train(dt.formula, method="J48", abalone_data_cleansed_age_groups, tuneLength = 8, trControl = loocv.train_control)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", tuneLength = 8)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
dt.rf_h <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
dt.rf_h <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#prox=TRUE,allowParallel=TRUE)
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
dt.rf_h_a_finalModel
dt_sum.rf_h_a_final
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
#dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
#
length(dt.rf_h_a_finalModel)
width(dt.rf_h_a_finalModel)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
#dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
#
#length(dt.rf_h_a_finalModel)
#width(dt.rf_h_a_finalModel)
#depth(dt.rf_h_a_finalModel)
#
plot(dt.rf_h_a_finalModel)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
#dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
#
#length(dt.rf_h_a_finalModel)
#width(dt.rf_h_a_finalModel)
#depth(dt.rf_h_a_finalModel)
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#prox=TRUE,allowParallel=TRUE)
#dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf")
if(!require(doMC)) install.packages('doMC')
if(!require(rJava)) install.packages('rJava')
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(RWeka)) install.packages("RWeka", repos = mirrorUrl)
#e1071
if(!require(e1071)) install.packages("e1071", repos = mirrorUrl)
#libcoin
if(!require(coin)) install.packages("coin", repos = mirrorUrl)
#partykit
if(!require(partykit)) install.packages("partykit", repos = mirrorUrl)
#rpart
if(!require(rpart.plot)) install.packages("rpart.plot", repos = mirrorUrl)
#randomForest
if(!require(randomForest)) install.packages("randomForest", repos = mirrorUrl)
#
# configure multicore
library("doMC")
library("e1071")
library("caret")
library("RWeka")
library("rpart.plot")
library("libcoin")
library("partykit")
library("randomForest")
registerDoMC()
dt_sum.rf_h_a$details[1]
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
#dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
#
#length(dt.rf_h_a_finalModel)
#width(dt.rf_h_a_finalModel)
#depth(dt.rf_h_a_finalModel)
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
View(dt.rf_h_a_finalModel)
View(dt.rf_h_a)
View(dt.rf_h_a_finalModel)
View(dt.rf_h_a_finalModel)
View(dt.rf_h_a_finalModel)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
dt_sum.rf_h_a_final <- summary(dt.rf_h_a_finalModel)
#
dt_sum.rf_h_a
#
#dt.rf_h_a_finalModel_party <- as.party(dt.rf_h_a_finalModel)
#
#length(dt.rf_h_a_finalModel)
#width(dt.rf_h_a_finalModel)
#depth(dt.rf_h_a_finalModel)
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
dt.rf_h <- train(as.factor(rings)~., data = holdout.training, method = "rf")
dt.rf_h <- train(as.factor(rings)~., data = holdout.training, method = "rf")
#dt.rf_h <- train(as.factor(rings)~., data = holdout.training, method = "rf")
dt.rf_h <- train(as.factor(rings) ~., method="rf", holdout.training, tuneLength = 8)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
#
dt_sum.rf_h_a
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
print(dt.rf_h_a_finalModel)
rm(dt.rf_h)
View(dt.rf_h_a_finalModel)
dt_sum.rf_h_a
View(dt.rf_h_a_finalModel)
dt.rf_h_a
dt.rf_h_a_finalModel
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#prox=TRUE,allowParallel=TRUE)
#dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", prox= TRE)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#prox=TRUE,allowParallel=TRUE)
#dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", tuneLength = 8)
dt.rf_h_a <- train(dt.formula, data = holdout_age_groups.training, method = "rf", prox= TRUE)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
#
#dt_sum.rf_h_a
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
dt.rf_h_a_finalModel <- dt.rf_h_a$finalModel
dt_sum.rf_h_a <- summary(dt.rf_h_a)
#
dt.rf_h_a_finalModel$forest[11]
dt.rf_h_a_finalModel$forest[12]
#
print(dt.rf_h_a)
print(dt.rf_h_a_finalModel)
plot(dt.rf_h_a_finalModel)
dt.rf_h_a_test <- predict(dt.rf_h_a, newdata = holdout_age_groups.testing)
dt.c4_5_j48_h_a_test_cm <- confusionMatrix(dt.rf_h_a_test, holdout_age_groups.testing$age_group)
dt.c4_5_j48_h_a_test_cm$table
dt.c4_5_j48_h_a_test_cm$overall[1]
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5
dt.rf_cv-r5kf8_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "rf", prox= TRUE, trControl = cv.train_control_8_5)
#dt.rf_h <- train(dt.formula, data = holdout.training, method = "rf", prox = FALSE, trControl = trControl)
#abalone_data_cleansed_age_groups, tuneLength = 8, trControl = cv.train_control_8_5
dt.rf_cv_r5kf8_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "rf", prox= TRUE, trControl = cv.train_control_8_5)
dt.rf_cv_r5kf8_a_finalModel <- dt.rf_cv_r5kf8_a$finalModel
dt_sum.rf_cv_r5kf8_a <- summary(dt.rf_cv_r5kf8_a)
#
dt.rf_cv_r5kf8_a_finalModel$forest[11]
dt.rf_cv_r5kf8_a_finalModel$forest[12]
#
print(dt.rf_cv_r5kf8_a)
print(dt.rf_cv_r5kf8_a_finalModel)
plot(dt.rf_cv_r5kf8_a_finalModel)
dt.rf_cv_r5kf8_a_test <- predict(dt.rf_cv_r5kf8_a, newdata = holdout_age_groups.testing)
dt.rf_cv_r5kf8_a_test_cm <- confusionMatrix(dt.rf_cv_r5kf8_a_test, holdout_age_groups.testing$age_group)
dt.rf_cv_r5kf8_a_test_cm$table
dt.rf_cv_r5kf8_a_test_cm$overall[1]
dt.rf_loo_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "LOOCV", trControl = loocv.train_control)
dt.rf_loo_a <- train(dt.formula, data = abalone_data_cleansed_age_groups, method = "rf", trControl = loocv.train_control)
summary(nb.h_a)
#model <- NaiveBayes(Species~., data=data_train)
#nb.h_a <- NaiveBayes(Species~., data=data_train)
#nb.h_a <- train(dt.formula, data=iris, trControl=train_control, method="nb")
#nb.h_a <- train(dt.formula, data=holdout_age_groups.training, method="nb")
nb.h_a <- NaiveBayes(dt.formula, data=holdout_age_groups.training)
if(!require(caret)) install.packages("caret", repos = mirrorUrl)
if(!require(klaR)) install.packages("klaR", repos = mirrorUrl)
#
library("caret")
library("klaR")
#model <- NaiveBayes(Species~., data=data_train)
#nb.h_a <- NaiveBayes(Species~., data=data_train)
#nb.h_a <- train(dt.formula, data=iris, trControl=train_control, method="nb")
#nb.h_a <- train(dt.formula, data=holdout_age_groups.training, method="nb")
nb.h_a <- NaiveBayes(dt.formula, data=holdout_age_groups.training)
summary(nb.h_a)
print(nb.h_a)
summary(nb.h_a)
nb_sum.h_a <- summary(nb.h_a)
nb_sum.h_a
View(nb.h_a)
nb.h_a_test <- predict(nb.h_a, holdout_age_groups.testing)
# summarize results
confusionMatrix(nb.h_a_test$class, holdout_age_groups.testing$age_group)
#predictions &lt;- predict(model, x_test)
#dt_sum.c4_5_h2_a <- summary(dt.c4_5_h2_a)
#dt_sum.c4_5_h2_a_final <- summary(dt.c4_5_h2_a$finalModel)
##
#dt_sum.c4_5_h2_a
##
#dt.c4_5_h2_a_finalModel <- dt.c4_5_h2_a$finalModel
#dt.c4_5_h2_a_finalModel_party <- as.party(dt.c4_5_h2_a_finalModel)
##
#length(dt.c4_5_h2_a_finalModel_party)
#width(dt.c4_5_h2_a_finalModel_party)
#depth(dt.c4_5_h2_a_finalModel_party)
#
#plot(dt.c4_5_h2_a_finalModel_party)
#nb_sum.h_a <- summary(nb.h_a)
plot(nb.h_a)
